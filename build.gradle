plugins {
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'org.jenkins-ci.jpi' version '0.42.0'
    id 'com.palantir.git-version' version '0.12.3'
}

group 'org.jenkins-ci.plugins'
version gitVersion(prefix:'ez-templates-')
description 'Allows you to use any job as a template for another job with overridable parameters'

repositories {
    jcenter()
}

java {
    registerFeature('optionalJenkinsPlugins') {
        usingSourceSet(sourceSets.main)
    }
}

dependencies {
    optionalJenkinsPluginsApi 'org.jenkins-ci.plugins:promoted-builds:2.21@jar',
            'org.jenkins-ci.plugins.workflow:workflow-job:2.4@jar'

    testCompile 'junit:junit:4.12',
            'org.mockito:mockito-all:1.9.5',
            'org.hamcrest:hamcrest-all:1.3',
            'pl.pragmatists:JUnitParams:1.0.5'
}

sourceCompatibility = 1.8

// Disable Java 8 doclint
allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

jenkinsPlugin {
    // version of Jenkins core this plugin depends on
    coreVersion = '1.642.3'

    // short name of the plugin, defaults to the project name without trailing '-plugin'
    shortName = 'ez-templates'

    // human-readable name of plugin
    displayName = 'EZ Templates'

    // URL for plugin on Jenkins wiki or elsewhere
    url = 'https://github.com/jenkinsci/ez-templates-plugin'

    // plugin URL on GitHub, optional
    gitHubUrl = 'https://github.com/jenkinsci/ez-templates-plugin.git'

    // use the plugin class loader before the core class loader, defaults to false
    pluginFirstClassLoader = false

    developers {
        developer {
            id 'drekbour'
            name 'Marc Carter'
        }
        developer {
            id 'joelj'
            name 'Joel Johnson'
        }
    }
}
